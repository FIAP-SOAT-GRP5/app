name: Execute Tests

on:
 push:
  branches:
   - main
   - develop
   - '*'

jobs:
 build:
  name: 'Build project'
  runs-on: ubuntu-latest
  steps:
   - name: Checkout
     uses: actions/checkout@v3

   - name: Set up Node.js
     uses: actions/setup-node@v3
     with:
      node-version: 18

   - name: Cache node modules
     id: cache-npm
     uses: actions/cache@v4
     env:
      cache-name: cache-node-modules
     with:
      path: |
       node_modules
      key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      restore-keys: |
       ${{ runner.os }}-build-${{ env.cache-name }}-
       ${{ runner.os }}-build-
       ${{ runner.os }}-

   - name: Install dependencies
     run: npm install

 lint:
  name: 'Validate lint'
  needs: build
  runs-on: ubuntu-latest
  steps:
   - name: Checkout
     uses: actions/checkout@v3

   - name: Set up Node.js
     uses: actions/setup-node@v3
     with:
      node-version: 18

   - name: Cache node modules
     id: cache-npm
     uses: actions/cache@v4
     env:
      cache-name: cache-node-modules
     with:
      path: |
       node_modules
      key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      restore-keys: |
       ${{ runner.os }}-build-${{ env.cache-name }}-
       ${{ runner.os }}-build-
       ${{ runner.os }}-
      run: npm install
   - name: Validate with ESLint
     run: npm run lint

 test:
  name: 'Validate tests'
  needs: build
  runs-on: ubuntu-latest
  steps:
   - name: Checkout
     uses: actions/checkout@v3

   - name: Set up Node.js
     uses: actions/setup-node@v3
     with:
      node-version: 18

   - name: Cache node modules
     id: cache-npm
     uses: actions/cache@v4
     env:
      cache-name: cache-node-modules
     with:
      path: |
       node_modules
      key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      restore-keys: |
       ${{ runner.os }}-build-${{ env.cache-name }}-
       ${{ runner.os }}-build-
       ${{ runner.os }}-
      run: npm install

   - name: Run BDD tests
     run: npm run test:bdd

   - name: Run tests with Jest
     run: npm run test:cov

   - name: fix code coverage paths
     working-directory: ./coverage
     run: |
       sed -i 's/\/home\/runner\/work\/ms-order\/ms-order\//\/github\/workspace\//g' lcov.info
       sed -i 's/\/home\/runner\/work\/ms-order\/ms-order\//\/github\/workspace\//g' sonar-cloud-reporter.xml

   - name: Analyze with SonarCloud
     uses: sonarsource/sonarcloud-github-action@master
     env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
     with:
      # Additional arguments for the sonarcloud scanner
      args:
       # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
       # mandatory
       -Dsonar.projectKey=FIAP-SOAT-GRP5_ms-order
       -Dsonar.organization=fiap-soat-grp5
